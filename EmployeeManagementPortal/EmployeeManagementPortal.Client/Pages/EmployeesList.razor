@page "/employees"
@using EmployeeManagementPortal.Models
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager

@inject IEmployeeService _employeeService
@implements IDisposable
@rendermode @(new InteractiveAutoRenderMode(prerender: false))

<div class="container">
    <h3>EmployeesList</h3>
    
    <MudDataGrid T="Employee" Items="_employeeService.Employees" SelectOnRowClick="true"
             EditMode="DataGridEditMode.Form" Bordered="true" Elevation="15" Hover="true" Striped="true"
             EditTrigger="DataGridEditTrigger.OnRowClick" Class="IsCompleted">
    <Columns>
        <PropertyColumn Property="x => x.Id" Title="Id" />
        <PropertyColumn Property="x => x.Name" Title="Name" />
        @* <TemplateColumn Items="todoitem" title="Completed">
            <CellTemplate>
                <MudCheckBox @bind-Value="@context.Item.IsComplete" @onclick="() => ChangeCompleteness(context.Item)" id="liveToastBtn"></MudCheckBox>
            </CellTemplate>
        </TemplateColumn> *@
    @* <TemplateColumn Items="EmployeeList">
            <CellTemplate>
                <a href="@($"todoitem/update/{context.Item.Id}")" class="">
                    <i class="fa-solid fa-pen-to-square fa-xl"></i>
                </a>
                <button @onclick="() => PassIdToModal(context.Item.Id)" type="button" class="" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    <i class="fa-solid fa-trash fa-xl"></i>
                </button>
            </CellTemplate>
        </TemplateColumn> *@
    </Columns>
    <PagerContent>
        <MudDataGridPager T="Employee" PageSizeOptions=@(new int[] {5, 10, 20}) />
    </PagerContent>
</MudDataGrid>
</div>

@code {
    public List<Employee> EmployeeList = new List<Employee>();

    protected override async Task OnInitializedAsync(){
        // EmployeeList = _employeeService.GetAllEmployees().Result;
        _employeeService.Employees = await _employeeService.GetAllEmployees();
    }

    public void Dispose()
    {
        _employeeService.EmployeeChanged -= StateHasChanged;
    }
}
